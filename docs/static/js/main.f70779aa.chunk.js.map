{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","actions/ui.js","actions/auth.js","components/journal/JounarlEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/loading/LoadingScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","date","useSelector","state","noteDate","moment","useDispatch","active","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","setErrorAction","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JounarlEntry","backgroundSize","backgroundImage","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","docRef","NothingSelected","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","error","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterWithEmailPasswName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","LoadingScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f70779aa.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBdVRLFVbmSxmiRQrgZrVbkCUrEJB8gaDg\",\r\n    authDomain: \"journal-app-adf0b.firebaseapp.com\",\r\n    projectId: \"journal-app-adf0b\",\r\n    storageBucket: \"journal-app-adf0b.appspot.com\",\r\n    messagingSenderId: \"72975672875\",\r\n    appId: \"1:72975672875:web:d01518065dc2846fd82c6e\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileURL: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import { db } from '../firebase/firebaseConfig';\r\n\r\nexport const loadNotes = async( uid ) => {\r\n \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","export const fileUpload = async( file ) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/jennmg/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n\r\n        const docRef = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( docRef.id, newNote ) );\r\n        dispatch( addNewNote( docRef.id, newNote ) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc( `${ uid }/journal/notes/${ note.id }` ).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, note ) );\r\n        Swal.fire('Save', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please, wait',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n\r\n        Swal.fire('Delete', 'Note delete', 'success');\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const { date } = useSelector(state => state.notes)\r\n\r\n    const noteDate = moment( date );\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSaveNote = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n \r\n        const file = e.target.files[0];\r\n\r\n        if( file ) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>\r\n                { \r\n                    noteDate.format('MMMM') +\r\n                    ' ' + \r\n                    noteDate.format('Do') +\r\n                    ' ' +\r\n                    noteDate.format('YYYY')\r\n                }\r\n            </span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    onClick={ handlePictureUpload }\r\n                    className=\"btn btn-entry\"\r\n                >\r\n                    <i className=\"far fa-image\"></i> Picture\r\n                </button>\r\n\r\n                <button \r\n                    onClick={ handleSaveNote }\r\n                    className=\"btn btn-entry\"\r\n                >\r\n                    <i className=\"far fa-save\"></i> Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( activeId.current ) );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n    }, [ note, reset ]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote( formValues.id, { ...formValues } ));\r\n    }, [formValues, dispatch]);\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    className=\"notes__title-input\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happend today\"\r\n                    name=\"body\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n            </div>\r\n\r\n            {\r\n                note.url &&\r\n                    ( <div className=\"notes__image animate__animated animate__slideInUp\">\r\n                        <img \r\n                            src={ note.url }\r\n                            alt=\"bts\"\r\n                        />\r\n                    </div>)\r\n            }\r\n\r\n            <div className=\"notes__button-delete\">\r\n                <button \r\n                    onClick={ handleDelete }\r\n                    className=\"btn btn-outline-danger\"\r\n                >\r\n                    <i className=\"fas fa-trash\"></i> Delete\r\n                </button>\r\n            </div>\r\n\r\n        \r\n        </div>\r\n    );\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const setErrorAction = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeErrorAction = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n                .then( ({ user }) => {\r\n                    dispatch(login( user.uid, user.displayName ));\r\n                    dispatch(finishLoading());\r\n                })\r\n                .catch( e => {\r\n                    dispatch(finishLoading());\r\n                    \r\n                    Swal.fire( 'Error', e.message, 'error');\r\n                });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswName = (name, email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n                .then( async({user}) => {\r\n                    await user.updateProfile({ displayName: name });\r\n                    \r\n                    dispatch(\r\n                        login( user.uid, user.displayName )\r\n                    );\r\n                })\r\n                .catch( e => {\r\n                    console.log(e);\r\n\r\n                    Swal.fire( 'Error', e.message, 'error');\r\n                });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n                .then( ({ user }) => {\r\n                    dispatch(\r\n                        login( user.uid, user.displayName )\r\n                    )\r\n                });\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = ( ) => ({\r\n    type: types.logout\r\n});\r\n","import React from 'react';\r\nimport moment from 'moment'; \r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JounarlEntry = ({\r\n    id,\r\n    date,\r\n    title,\r\n    body,\r\n    url\r\n}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment( date );\r\n\r\n    const handleEntryClick = () => {\r\n        // dispatch activeNote\r\n        dispatch( \r\n            activeNote( id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            onClick={ handleEntryClick }\r\n            className=\"journal__entry pointer animate__animated animate__slideInLeft\">\r\n            {\r\n                ( url )\r\n                    &&\r\n                    (<div \r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url( ${ url } )`\r\n                        }}\r\n                    ></div>)\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\"> { title } </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JounarlEntry } from './JounarlEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JounarlEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar mt-5\">\r\n                <h3 className=\"mt-1\">\r\n                    <i className=\"far fa-newspaper\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button \r\n                    onClick={ handleLogout }\r\n                    className=\"btn btn-entry\"\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                onClick={ handleAddNew }\r\n                className=\"journal__new-entry\"\r\n            >\r\n                <i className=\"fas fa-plus fa-4x\"></i>\r\n                <p className=\"mt-1\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing_main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry\r\n                <br/>\r\n\r\n                <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { SideBar } from './SideBar';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <SideBar />\r\n\r\n            <main>\r\n                {\r\n                    ( active ) \r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)      \r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n// import validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n// import { removeErrorAction, setErrorAction } from '../../actions/ui';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    // const isFormValid = () => {\r\n    //     if( !validator.isEmail( email ) ) {\r\n    //         dispatch( setErrorAction( 'The email is invalid' ));\r\n    //         return false;\r\n    //     }\r\n\r\n    //     dispatch( removeErrorAction() );\r\n        \r\n    //     return true;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"auth__form animate__animated animate__fadeIn\" onSubmit={ handleLogin }>\r\n                <h3 className=\"auth__title\">Login</h3>\r\n\r\n                {/* {\r\n                   error &&\r\n                       ( \r\n                            <div className=\"auth__alert-error\">\r\n                                { error }\r\n                            </div>\r\n                        )\r\n                }\r\n                 */}\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"E-mail\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-1\" \r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div onClick={ handleGoogleLogin }  className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link \r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Creat new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    // const [error, setError] = useState('');\r\n    const dispatch = useDispatch();\r\n    // const { ui } = useSelector( state => state );\r\n    // const { msgError: error } = ui;\r\n    const { msgError: error } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const  { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswName(name, email, password) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ) {\r\n            // setError('The name is required');\r\n            dispatch( setErrorAction( 'The name is required' ));\r\n            \r\n            return false;\r\n        }else if( !validator.isEmail( email ) ) {\r\n            // setError('The email is invalid');\r\n            dispatch( setErrorAction( 'The email is invalid' ));\r\n            return false;\r\n        } else if( password.length < 5 ) {\r\n            // setError('The password is requires');\r\n            dispatch( setErrorAction( 'The password should be at least 6 characters' ));\r\n            return false;\r\n        } else if( password !== password2 ) {\r\n            // setError('The password is not matched');\r\n            dispatch( setErrorAction( 'The password confirmation does not match' ));\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() );\r\n\r\n        return true;\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <form className=\"auth__form animate__animated animate__fadeIn\" onSubmit={ handleRegister }>\r\n                <h3 className=\"auth__title inline\">Register</h3>\r\n\r\n                {\r\n                   error &&\r\n                       ( \r\n                            <div className=\"auth__alert-error\">\r\n                                { error }\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"E-mail\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-secondary btn-block mb-1\" \r\n                    type=\"submit\"\r\n                    // disabled={true}\r\n                >\r\n                    Register\r\n                </button>\r\n                \r\n                \r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                        <Route className=\"animate__animated animate__bounceInLeft\" exact path=\"/auth/login\" component={ LoginScreen } />\r\n\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? ( <Redirect to=\"/\" /> )\r\n                : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading__main-content\">\r\n            <div className=\"loading__icon\">\r\n                <i className=\"fas fa-spinner fa-7x fa-pulse \"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {firebase} from '../firebase/firebaseConfig';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { LoadingScreen } from '../components/loading/LoadingScreen';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if( user?.uid ) { // si el objeto user tiene algo, entonces evalúa si el uid existe\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            }else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        });\r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\r\n\r\n    if( checking ) {\r\n        return (\r\n            <LoadingScreen />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/auth\" \r\n                        component={ AuthRouter } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\" \r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </>\r\n        </Router>\r\n    );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n/* \r\n    {\r\n        notes: [],\r\n        active: null.\r\n        active: {\r\n            id: 'KJKJDLKJDJASKDJKAD',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 1231232131\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad: \r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        \r\n        case types.notesLogoutCleaning: \r\n            return {\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n            \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n/* \r\n    {\r\n        uid: DJEIDJWPIEJ43WDEF.\r\n        name: 'Jennifer,\r\n    }\r\n\r\n*/\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n    switch( action.type ) {\r\n        \r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}